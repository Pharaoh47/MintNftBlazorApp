@page "/signin"
@using MintNftBlazorApp.Shared.Model;
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient
@inject IJSRuntime IJSRuntime

<h3>Sign in</h3>

<p>@message</p>

<div class="card">
    <div class="card-body">
        <EditForm Model="user" OnValidSubmit="OnValid">
            <DataAnnotationsValidator />
			<ValidationSummary />
            <div class="form-group">
                <label>Username</label>
				<InputText @bind-Value="user.Username" class="form-control" />
            </div>
            <div class="form-group">
                <label>Password</label>
				<InputText @bind-Value="user.Password" type="password" class="form-control" />
            </div>
			<button class="btn btn-primary" disabled="@isDisabled">Login</button>
        </EditForm>
    </div>
</div>

@code {
	UserModel user = new UserModel();
	string message = string.Empty;
	bool isDisabled = false;

	private async Task OnValid()
	{
		isDisabled = true;
		using (var msg = await HttpClient.PostAsJsonAsync<UserModel>("/api/auth/login", user, System.Threading.CancellationToken.None))
		{
			if (msg.IsSuccessStatusCode)
			{
				ResultModel result = await msg.Content.ReadFromJsonAsync<ResultModel>();
				message = result.Message;
				isDisabled = false;
				if (result.Success)
				{
					await IJSRuntime.InvokeVoidAsync("localStorage.setItem", "user", $"{result.Username};{result.JwtBearer}").ConfigureAwait(false);
					NavigationManager.NavigateTo("/");
				}
			}
		}
	}
}